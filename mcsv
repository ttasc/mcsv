#!/bin/sh
# shellcheck disable=SC2086

set -e
pwd=$PWD
fddir=/tmp/server@ttasc/mcsv # file descriptor location (std-in/out/err)
jarfile="mcsv.jar"

die() { echo "$1"; exit 1; }
if ! command -v java >/dev/null 2>&1; then die "Java is not installed!"; fi

opts="
-Xmx4096M
-Xms4096M
-XX:+AlwaysPreTouch
-XX:+DisableExplicitGC
-XX:+ParallelRefProcEnabled
-XX:+PerfDisableSharedMem
-XX:+UnlockExperimentalVMOptions
-XX:+UseG1GC
-XX:G1HeapRegionSize=8M
-XX:G1HeapWastePercent=5
-XX:G1MaxNewSizePercent=40
-XX:G1MixedGCCountTarget=4
-XX:G1MixedGCLiveThresholdPercent=90
-XX:G1NewSizePercent=30
-XX:G1RSetUpdatingPauseTimePercent=5
-XX:G1ReservePercent=20
-XX:InitiatingHeapOccupancyPercent=15
-XX:MaxGCPauseMillis=200
-XX:MaxTenuringThreshold=1
-XX:SurvivorRatio=32
-Dusing.aikars.flags=https://mcflags.emc.gs
-Daikars.new.flags=true
"
start_server="java $opts -jar $jarfile nogui"

while getopts 'rda' opt; do
    case "$opt" in
        r) rmworld=true ;;
        d) daemon=true ;;
        a) attach=true ;;
        *) echo "Invalid option!" ;;
    esac
done
shift $((OPTIND-1))

if [ "$attach" = true ]; then
    if ! pid="$(pgrep -f "$jarfile nogui" 2>/dev/null)"; then
        die "mcsv is not running."
    fi
    tail -f --pid="$$" "$fddir"/out &
    while read -r input; do
        if ! kill -0 "$pid" >/dev/null 2>&1; then break; fi
        echo "$input" > "$fddir"/in
    done
else
    if pid="$(pgrep -f "$jarfile nogui" 2>/dev/null)"; then
        die "mcsv is already running in background (pid:$pid)"
    fi
    jardir="${1:-.}"
    if [ ! -f "$jardir/$jarfile" ]; then die "Please specify Server version (the name of the folder contain $jarfile file)"; fi
    cd "$jardir"
    if [ "$rmworld" = true ];then
        rm -rfv ops.json permissions.yml usercache.json world*
    fi
    if [ "$daemon" = true ]; then
        mkdir -p "$fddir"
        if [ ! -p "$fddir"/in ]; then
            mkfifo "$fddir"/in
        fi
        (
            tail -f "$fddir"/in | \
            nohup $start_server > "$fddir"/out 2> "$fddir"/err && \
            printf "\n\t***@@@***\nServer is completely shutdown.\nPress any key to exit." >> "$fddir"/out ; \
            rm -rf "$fddir"
        ) &
    else
        $start_server
    fi
    cd "$pwd"
fi
